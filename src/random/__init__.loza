#
# random.loza
#
# The Loza Project
# This Loza module is developed by Amirmohammad Ghazi dizaji <amirghazi1387@gmail.com> 
# Copyright 2020 parsa shahmaleki <parsampsh@gmail.com>
# 
# This file is part of Loza.
#
# Loza is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# Loza is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with Loza.  If not, see <https://www.gnu.org/licenses/>.
#########################################################################

namespace random
    @doc """\
    Generates a random number between x and y.\n\
    First and second arguments are x and y as number.\
    """
    func int::randint(int $a, int $b)
        return py_load_module('random')->randint($a, $b)
    endfunc

    @doc """\
    Initializes Random number generator.\n\
    Gets seed as integer.\
    """
    func seed($a)
        py_load_module('random')->seed($a)
    endfunc

    @doc """\
    Returns the current internal state of the random number generator.\
    """
    func getstate()
        return py_load_module('random')->getstate()
    endfunc

    func setstate($state)
        py_load_module('random')->setstate($state)
    endfunc

    func getrandbits($a)
        return py_load_module('random')->getrandbits($a)
    endfunc

    func randrange($a, $b)
        return py_load_module('random')->randrange($a, $b)
    endfunc

    @doc "Selects a random item in a list"
    func choice(list $list)
        $index = randint(0, len($list)-1)
        return $list[$index]
    endfunc

    @doc """\
    Generates a random float less that 1.\
    """
    func random()
        return py_load_module('random')->random()
    endfunc
endns
